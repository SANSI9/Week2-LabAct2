<?php

class Book {
    public $title;
    protected $author;
    private $price;

    // Constructor to initialize the book's title, author, and price
    public function __construct($title, $author, $price) {
        $this->title = $title;
        $this->author = $author;
        $this->price = $price;
    }

    // Method to get the details of the book
    public function getDetails() {
        return "Title: {$this->title}, Author: {$this->author}, Price: {$this->price}";
    }

    // Method to update the price of the book
    protected function setPrice($price) {
        $this->price = $price;
    }

    // Magic method to handle calls to non-existent methods
    public function __call($name, $arguments) {
        if ($name == 'updateStock') {
            return "Method 'updateStock' does not exist, but you can create it if needed!";
        }
        return "Method '{$name}' does not exist.";
    }

    // A public method to allow updating the price from outside the class
    public function updatePrice($price) {
        $this->setPrice($price);
    }
}

class Library {
    public $name;
    private $books = [];

    // Constructor to initialize the library's name
    public function __construct($name) {
        $this->name = $name;
        echo "Library '{$this->name}' is now open.\n";
    }

    // Method to add a book to the library
    public function addBook(Book $book) {
        $this->books[] = $book;
        echo "Book '{$book->title}' added to the library.\n";
    }

    // Method to remove a book from the library by title
    public function removeBook($title) {
        foreach ($this->books as $index => $book) {
            if ($book->title === $title) {
                unset($this->books[$index]);
                echo "Book '{$title}' removed from the library.\n";
                return;
            }
        }
        echo "Book '{$title}' not found in the library.\n";
    }

    // Method to list all books in the library
    public function listBooks() {
        if (empty($this->books)) {
            echo "No books available in the library.\n";
        } else {
            foreach ($this->books as $book) {
                echo $book->getDetails() . "\n";
            }
        }
    }

    // Destructor to clean up the library
    public function __destruct() {
        echo "Library '{$this->name}' is now closed.\n";
    }
}

// Implementation
$library = new Library("City Library");

$book1 = new Book("1984", "George Orwell", 15.99);
$book2 = new Book("To Kill a Mockingbird", "Harper Lee", 10.99);
$book3 = new Book("The Great Gatsby", "F. Scott Fitzgerald", 12.99);

$library->addBook($book1);
$library->addBook($book2);
$library->addBook($book3);

$library->listBooks();

$book1->updatePrice(17.99);
echo $book1->getDetails() . "\n";

echo $book2->updateStock() . "\n"; // Attempt to call a non-existent method

$library->removeBook("1984");
$library->listBooks();

unset($library); // Explicitly destroy the library object to trigger the destructor
?>
